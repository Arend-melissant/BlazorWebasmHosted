@page "/students"

@using BlazorWebasmHosted.Shared
@inject HttpClient Http
@inject IState State

<RadzenSwitch @bind-Value=@showGrid Style="margin-bottom: 20px" />
<h1>Students</h1>

    @if (selectedItem?.Any() == true)
    {
    <div style="margin-left: 16px">
        Selected Employee: @selectedItem[0].Firstname 
    </div>
    }

@if (State.ErrorMsg != "")
{
    <h1>@State.ErrorMsg</h1>
}
@* else
{
    <h1>All OK</h1>
} *@

@if (Data == null)
{
    <p><em>Loading...</em></p>
}
else
{
    @if (showGrid)
    {
        <RadzenDataGrid AllowColumnResize="true" FilterMode="FilterMode.Advanced" PageSize="5" AllowPaging="true" Data="@Data" TItem="Student" SelectionMode="DataGridSelectionMode.Single" @bind-Value=@selectedItem LogicalFilterOperator="LogicalFilterOperator.Or">
            <Columns>
                <RadzenDataGridColumn TItem="Student" Property="Firstname" Filterable="false" Title="Voornaam" Frozen="true" Width="100px" TextAlign="TextAlign.Left" />
                <RadzenDataGridColumn TItem="Student" Property="Lastname" Title="Achternaam" Width="100px"/>
                <RadzenDataGridColumn TItem="Student" Property="Student.Class.Classname" Title="Klas" Width="100px"/>
            </Columns>
        </RadzenDataGrid>
    }
}

@code {
    private List<Student> Data;
    private IList<Student> selectedItem;
    
    private bool showGrid = true;

    protected override async Task OnInitializedAsync()
    {
        Data = (await Http.GetFromJsonAsync<List<Student>>("api/Students/Get"));
    }

    protected override void OnInitialized()
    {
        State.Notify += OnNotify;
    }

    public void OnNotify()
    {
        InvokeAsync(() =>
        {
            StateHasChanged();
        });
    }

    public void Dispose()
    {
        State.Notify -= OnNotify;
    }
}
